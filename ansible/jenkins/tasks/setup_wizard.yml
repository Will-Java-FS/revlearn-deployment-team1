# jenkins/tasks/setup_wizard.yml
---
- name: Ensure Jenkins initialization scripts directory exists
  file:
    path: "{{ groovy_init_dir }}"
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0775

- name: Disable Setup Wizard and Set Memory Size
  blockinfile:
    path: /etc/systemd/system/jenkins.service.d/override.conf
    block: |
      [Service]
      Environment="JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xms2g -Xmx2g"
    create: yes  # Create the file if it doesn't exist
    state: present
    mode: '0644'

- name: Retrieve login info from Secrets Manager
  set_fact:
    login_username: "{{ lookup('aws_secret', 'revlearn/jenkins_login.jenkins_username', nested=true) }}"
    login_password: "{{ lookup('aws_secret', 'revlearn/jenkins_login.jenkins_pw', nested=true) }}" 
    sonarqube_token: "{{ lookup('aws_secret', 'revlearn/access_tokens.sonarqube_token', nested=true) }}"
    github_token: "{{ lookup('aws_secret', 'revlearn/access_tokens.github_token', nested=true) }}"
    webhook_token: "{{ lookup('aws_secret', 'revlearn/access_tokens.webhook_token', nested=true) }}"
    aws_secret_access_key: "{{ lookup('aws_secret', 'revlearn/aws_credentials.secret_access_key', nested=true) }}"
    aws_access_key_id: "{{ lookup('aws_secret', 'revlearn/aws_credentials.access_key', nested=true) }}"

- name: Create admin user 
  template:
    src: create_admin.groovy.j2
    dest: "{{ groovy_init_dir }}/create_admin.groovy"
    owner: jenkins
    group: jenkins
    mode: 0755
  vars:
    admin_username: "{{ login_username }}"
    admin_password: "{{ login_password }}"
  become: true

- name: Init Credentials
  template:
    src: init_credentials.groovy.j2
    dest: "{{ groovy_init_dir }}/init_credentials.groovy"
    owner: jenkins
    group: jenkins
    mode: 0755
  vars:
    sonarqube_api_token: "{{ sonarqube_token }}"
    aws_access_key_id: "{{ aws_access_key_id }}"
    aws_secret_access_key: "{{ aws_secret_access_key }}"
    github_api_token: "{{ github_token }}"
    github_webhook_secret: "{{ webhook_token }}"
  become: true

- name: Create Pipelines for all components
  template:
    src: init_pipelines.groovy
    dest: "{{ groovy_init_dir }}/init_pipelines.groovy"
    owner: jenkins
    group: jenkins
    mode: 0755
  become: true

- name: Configure GitHub Webhooks
  community.general.github_webhook:
    user: "{{ github_user }}"
    token: "{{ github_token }}"
    repository: "{{ item.repo_name }}"
    content_type: json
    secret: "{{ webhook_token }}"
    url: "{{ base_url }}/github-webhook/"
    state: present
    events: 
      - push
    active: yes
  loop:
    - { repo_name: 'Will-Java-FS/revlearn-backend-team1' }
    - { repo_name: 'Will-Java-FS/revlearn-frontend-team1' } 
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ local_python_interpreter }}"

- name: Restart Jenkins & Reload Daemon
  systemd:
    name: jenkins
    state: restarted
    daemon_reload: yes
  become: true

- name: Wait for Jenkins port to be ready
  wait_for:
    port: 8080
    delay: 10
    timeout: 60

